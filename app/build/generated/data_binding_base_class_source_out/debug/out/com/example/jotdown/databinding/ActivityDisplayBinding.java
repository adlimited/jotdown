// Generated by view binder compiler. Do not edit!
package com.example.jotdown.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.RelativeLayout;
import android.widget.ScrollView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.jotdown.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityDisplayBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final TextView barcodeRawValue;

  @NonNull
  public final TextView barcodeType;

  @NonNull
  public final TextView barcodeTypeMon;

  @NonNull
  public final TextView barcodeTypeMonT;

  @NonNull
  public final TextView barcodeTypeT;

  @NonNull
  public final Button buttonOperate;

  @NonNull
  public final ImageView diplayIcon;

  @NonNull
  public final TextView diplayText;

  @NonNull
  public final ImageView resultBackImgIn;

  @NonNull
  public final TextView resultT;

  @NonNull
  public final RelativeLayout resultTitle;

  @NonNull
  public final ScrollView scroll;

  @NonNull
  public final TextView titleResult;

  private ActivityDisplayBinding(@NonNull RelativeLayout rootView,
      @NonNull TextView barcodeRawValue, @NonNull TextView barcodeType,
      @NonNull TextView barcodeTypeMon, @NonNull TextView barcodeTypeMonT,
      @NonNull TextView barcodeTypeT, @NonNull Button buttonOperate, @NonNull ImageView diplayIcon,
      @NonNull TextView diplayText, @NonNull ImageView resultBackImgIn, @NonNull TextView resultT,
      @NonNull RelativeLayout resultTitle, @NonNull ScrollView scroll,
      @NonNull TextView titleResult) {
    this.rootView = rootView;
    this.barcodeRawValue = barcodeRawValue;
    this.barcodeType = barcodeType;
    this.barcodeTypeMon = barcodeTypeMon;
    this.barcodeTypeMonT = barcodeTypeMonT;
    this.barcodeTypeT = barcodeTypeT;
    this.buttonOperate = buttonOperate;
    this.diplayIcon = diplayIcon;
    this.diplayText = diplayText;
    this.resultBackImgIn = resultBackImgIn;
    this.resultT = resultT;
    this.resultTitle = resultTitle;
    this.scroll = scroll;
    this.titleResult = titleResult;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityDisplayBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityDisplayBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_display, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityDisplayBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.barcode_rawValue;
      TextView barcodeRawValue = ViewBindings.findChildViewById(rootView, id);
      if (barcodeRawValue == null) {
        break missingId;
      }

      id = R.id.barcode_type;
      TextView barcodeType = ViewBindings.findChildViewById(rootView, id);
      if (barcodeType == null) {
        break missingId;
      }

      id = R.id.barcode_type_mon;
      TextView barcodeTypeMon = ViewBindings.findChildViewById(rootView, id);
      if (barcodeTypeMon == null) {
        break missingId;
      }

      id = R.id.barcode_type_mon_t;
      TextView barcodeTypeMonT = ViewBindings.findChildViewById(rootView, id);
      if (barcodeTypeMonT == null) {
        break missingId;
      }

      id = R.id.barcode_type_t;
      TextView barcodeTypeT = ViewBindings.findChildViewById(rootView, id);
      if (barcodeTypeT == null) {
        break missingId;
      }

      id = R.id.button_operate;
      Button buttonOperate = ViewBindings.findChildViewById(rootView, id);
      if (buttonOperate == null) {
        break missingId;
      }

      id = R.id.diplay_icon;
      ImageView diplayIcon = ViewBindings.findChildViewById(rootView, id);
      if (diplayIcon == null) {
        break missingId;
      }

      id = R.id.diplay_text;
      TextView diplayText = ViewBindings.findChildViewById(rootView, id);
      if (diplayText == null) {
        break missingId;
      }

      id = R.id.result_back_img_in;
      ImageView resultBackImgIn = ViewBindings.findChildViewById(rootView, id);
      if (resultBackImgIn == null) {
        break missingId;
      }

      id = R.id.result_t;
      TextView resultT = ViewBindings.findChildViewById(rootView, id);
      if (resultT == null) {
        break missingId;
      }

      id = R.id.result_title;
      RelativeLayout resultTitle = ViewBindings.findChildViewById(rootView, id);
      if (resultTitle == null) {
        break missingId;
      }

      id = R.id.scroll;
      ScrollView scroll = ViewBindings.findChildViewById(rootView, id);
      if (scroll == null) {
        break missingId;
      }

      id = R.id.title_result;
      TextView titleResult = ViewBindings.findChildViewById(rootView, id);
      if (titleResult == null) {
        break missingId;
      }

      return new ActivityDisplayBinding((RelativeLayout) rootView, barcodeRawValue, barcodeType,
          barcodeTypeMon, barcodeTypeMonT, barcodeTypeT, buttonOperate, diplayIcon, diplayText,
          resultBackImgIn, resultT, resultTitle, scroll, titleResult);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
